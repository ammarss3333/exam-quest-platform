rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if false;
    }
    
    // Categories collection
    match /categories/{categoryId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Questions collection
    match /questions/{questionId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Exams collection
    match /exams/{examId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Exam Results collection
    match /examResults/{resultId} {
      allow read: if request.auth != null && 
                  (resource.data.studentId == request.auth.uid || isAdmin());
      allow create: if request.auth != null && 
                     request.resource.data.studentId == request.auth.uid;
      allow update, delete: if false;
    }
  }
}
